// <auto-generated />
using System;
using GerenciadorDeViagemApi.Infrastructure.Persistence.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GerenciadorDeViagemApi.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(GerenciadorDeViagemDbContext))]
    [Migration("20240212182743_novoCampoPrimeiroAcessoInUser")]
    partial class novoCampoPrimeiroAcessoInUser
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GerenciadorDeViagem.Model.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte>("Ativo")
                        .HasMaxLength(1)
                        .HasColumnType("tinyint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.Property<long>("Matricula")
                        .HasColumnType("BIGINT");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("PrimeiroAcesso")
                        .HasColumnType("bit");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("NVarChar(max)");

                    b.Property<byte>("TipoDeUsuario")
                        .HasMaxLength(1)
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("UltimoLogin")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("GerenciadorDeViagem.Model.Viagem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataAprovacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataCancelamento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataDaSolicitacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataIda")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataVolta")
                        .HasColumnType("datetime2");

                    b.Property<string>("Destino")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("StatusViagem")
                        .HasColumnType("tinyint");

                    b.Property<byte>("TipoTransporte")
                        .HasColumnType("tinyint");

                    b.Property<long>("UsuarioAprovadorMatricula")
                        .HasColumnType("BIGINT");

                    b.Property<long>("UsuarioSolicitanteMatricula")
                        .HasColumnType("BIGINT");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioAprovadorMatricula");

                    b.HasIndex("UsuarioSolicitanteMatricula");

                    b.ToTable("Viagens");
                });

            modelBuilder.Entity("GerenciadorDeViagem.Model.Viagem", b =>
                {
                    b.HasOne("GerenciadorDeViagem.Model.Usuario", "UsuarioAprovador")
                        .WithMany("ViagensAprovadas")
                        .HasForeignKey("UsuarioAprovadorMatricula")
                        .HasPrincipalKey("Matricula")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GerenciadorDeViagem.Model.Usuario", "UsuarioSolicitante")
                        .WithMany("ViagensSolicitadas")
                        .HasForeignKey("UsuarioSolicitanteMatricula")
                        .HasPrincipalKey("Matricula")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("UsuarioAprovador");

                    b.Navigation("UsuarioSolicitante");
                });

            modelBuilder.Entity("GerenciadorDeViagem.Model.Usuario", b =>
                {
                    b.Navigation("ViagensAprovadas");

                    b.Navigation("ViagensSolicitadas");
                });
#pragma warning restore 612, 618
        }
    }
}
